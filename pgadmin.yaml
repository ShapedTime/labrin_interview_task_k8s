apiVersion: v1
kind: Service
metadata:
  name: pgadmin
  labels:
    app: pgadmin
spec:
  type: NodePort
  selector:
    app: pgadmin
  ports:
  - port: 80
    targetPort: 5050
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
spec:
  replicas: 5
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      securityContext:
        runAsGroup: 5050
        runAsUser: 5050
        fsGroup: 5050
      containers:
      - name: pgadmin
        image: dpage/pgadmin4:4.16
        ports:
        - containerPort: 5050
        env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: "testtest"
            - name: PGADMIN_DEFAULT_PASSWORD
              value: "testtest"
            - name: PGADMIN_LISTEN_PORT
              value: "5050"
            - name: PGADMIN_PORT
              value: "5050"
            # - name: PGADMIN_DEFAULT_SERVER
            #   value: "0.0.0.0/pgadmin/"
            # - name: PGADMIN_LISTEN_ADDRESS
            #   value: "127./pgadmin/"
        #     - name: GUNICORN_ACCESS_LOGFILE
        #       value: "/var/lib/pgadmin/gunicorn_access.log"
        #     - name: DEBUG
        #       value: "true"
        volumeMounts:
          - name: pgadmin-persistent-storage
            mountPath: /var/lib/pgadmin
          - name: pgadmin-persistent-storage
            mountPath: /var/log/pgadmin
        args: [";chown -R pgadmin:pgadmin /pgadmin4; chown -R pgadmin:pgadmin /pgadmin4/*; chmod a+rwx /pgadmin4/*"]
        # readinessProbe:
        #     httpGet:
        #       path: /login
        #       port: 5050
        # command: ["/bin/sh", "-c"]
        # args: ["tail -f /pgadmin4/*.py"]
      volumes:
        - name: pgadmin-persistent-storage
          nfs:
            server: nfs-server.default.svc.cluster.local
            path: /pgadmin
